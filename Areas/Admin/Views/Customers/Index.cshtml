@{
    ViewData["Title"] = "Customers";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@section Styles {
    <link rel="stylesheet" href="~/admin/js/plugins/sweetalert2/sweetalert2.min.css">
    <link rel="stylesheet" href="~/admin/js/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css">
    <link rel="stylesheet" href="~/admin/js/plugins/flatpickr/flatpickr.min.css">
}

<!-- Hero -->
<div class="bg-body-light">
    <div class="content content-full">
        <div class="d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center">
            <h1 class="flex-grow-1 fs-3 fw-semibold my-2 my-sm-3">Customer</h1>
            <nav class="flex-shrink-0 my-2 my-sm-0 ms-sm-3" aria-label="breadcrumb">
                <ol class="breadcrumb breadcrumb-alt">
                    <li class="breadcrumb-item">
                        <a href="javascript:void(0)">Dashboard</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Customers</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<!-- END Hero -->
<div class="content">
    <div class="block block-rounded">
        <div class="block-header block-header-default">
            <h3 class="block-title">List Customer</h3>
            <div class="block-options">
                <button type="button" class="btn btn-hero btn-primary me-2" data-bs-toggle="modal"
                        data-bs-target="#modal-customer" id="btn-and">
                    Add Customer
                </button>
            </div>
        </div>
        <div class="block-content">
            <table class="table table-striped table-borderless table-vcenter">
                <thead>
                    <tr class="bg-body-dark">
                        <th class="d-none d-sm-table-cell text-center" style="width: 40px;">#</th>
                        <th class="text-center" style="width: 70px;"><i class="si si-user"></i></th>
                        <th>Name</th>
                        <th class="d-none d-sm-table-cell">Email</th>
                        <th class="d-none d-sm-table-cell">Phone</th>
                        <th class="d-none d-sm-table-cell">JoinTime</th>
                        <th class="d-none d-lg-table-cell" style="width: 15%;">Status</th>
                        <th class="text-center" style="width: 80px;">Actions</th>
                    </tr>
                </thead>
                <tbody id="listCustomer">
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-customer" tabindex="-1" role="dialog" aria-labelledby="modal-customer"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="block block-rounded block-themed block-transparent mb-0">
                <div class="block-header bg-primary-dark">
                    <h3 class="block-title">Add customer</h3>
                    <div class="block-options">
                        <button type="button" class="btn-block-option" data-bs-dismiss="modal" aria-label="Close">
                            <i class="fa fa-fw fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="block-content">
                    <form novalidate="novalidate" onsubmit="return false;" class="js-validation"
                          id="btabs-static-home" role="tabpanel" aria-labelledby="btabs-static-home-tab" tabindex="0">
                        <div class="mb-4">
                            <label class="form-label" for="val-username">Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="val-username" name="val-username" placeholder="Enter a username..">
                        </div>
                        <div class="mb-4">
                            <label class="form-label" for="val-email">Email <span class="text-danger">*</span></label>
                            <input type="email" class="form-control" id="val-email" name="val-email" placeholder="Your valid email..">
                        </div>
                        <div class="mb-4">
                            <label for="val-birthday" class="form-label">BirthDay <span class="text-danger">*</span></label>
                            <input type="text" class="js-flatpickr form-control form-control-alt" id="val-birthday"
                                   name="val-birthday" placeholder="Please enter birthday...">
                        </div>
                        <div class="mb-4">
                            <label class="form-label" for="val-password">Password <span class="text-danger">*</span></label>
                            <input type="password" class="form-control" id="val-password" name="val-password" placeholder="Choose a safe one..">
                        </div>
                        <div class="mb-4 d-flex gap-4">
                            <label for="gender-male" class="form-label">Gender</label>
                            <div class="space-x-2">
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" id="gender-male" name="user_gender" value="1" checked>
                                    <label class="form-check-label" for="gender-male">Male</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" id="gender-female" name="user_gender" value="0">
                                    <label class="form-check-label" for="gender-female">Female</label>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex align-items-center gap-5">
                            <label for="user_status" class="form-label">Status</label>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="user_status" checked>
                                <label class="form-check-label" for="user_status"></label>
                            </div>
                        </div>
                        <div class="block-content block-content-full text-end">
                            <button type="button" class="btn btn-sm btn-alt-secondary me-1"
                                    data-bs-dismiss="modal">
                                Exit
                            </button>
                            <button type="submit" class="btn btn-sm btn-primary add-user-element"
                                    id="btn-add-user">
                                Add
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/admin/js/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/admin/js/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/admin/js/plugins/flatpickr/flatpickr.min.js"></script>
    <script src="~/admin/js/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/admin/js/plugins/jquery-validation/additional-methods.js"></script>
    <script>Dashmix.helpersOnLoad(['js-flatpickr', 'jq-datepicker']);</script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            ! function () {
                class e {
                    static initValidation() {
                        Dashmix.helpers("jq-validation"), jQuery(".js-validation").validate({
                            ignore: [],
                            rules: {
                                "val-username": {
                                    required: !0,
                                },
                                "val-email": {
                                    required: !0,
                                    emailWithDot: !0
                                },
                                "val-password": {
                                    required: !0,
                                },
                                "val-birthday": {
                                    required: !0
                                }
                            },
                            messages: {
                                "val-username": {
                                    required: "Please enter a username",
                                    minlength: "Your username must consist of at least 3 characters"
                                },
                                "val-email": "Please enter a valid email address",
                                "val-password": {
                                    required: "Please provide a password",
                                    minlength: "Your password must be at least 5 characters long"
                                },
                                "val-birthday": {
                                    required: "Please select a birthday"
                                }
                            }
                        })
                    }
                    static init() {
                        this.initValidation()
                    }
                }
                Dashmix.onLoad((() => e.init()))
            }();


            // Tạo một hàm để lấy danh sách "allCustomers" từ API
            var customers = null;
            function getCustomerList() {
                fetch('/Admin/Customers/allCustomers')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Xử lý dữ liệu ở đây, dữ liệu sẽ là danh sách "allCustomers"
                        customers = data;
                        let htmlCus = '';
                        customers.forEach((item, index) => {
                            index++
                            htmlCus += `<tr>
                                                    <td class="d-none d-sm-table-cell text-center">${index}</td>
                                                    <td class="text-center">
                                                                        <img class="img-avatar img-avatar48" src="${item.profileImageUrl}" alt="">
                                                    </td>
                                                    <td class="fw-semibold">
                                                                        <a href="javascript:void(0)">${item.userName}</a>
                                                    </td>
                                                    <td class="d-none d-sm-table-cell">
                                                                        ${item.email}
                                                    </td>
                                                    <td class="d-none d-sm-table-cell">
                                                                        ${item.phoneNumber}
                                                    </td>
                                                    <td class="d-none d-sm-table-cell">
                                                                        ${item.joinTime}
                                                    </td>
                                                    <td class="d-none d-lg-table-cell">
                                                        <span class="badge bg-danger">Disable</span>
                                                    </td>
                                                    <td class="text-center">
                                                        <div class="btn-group">
                                                            <button type="button" class="btn btn-sm btn-alt-secondary" data-bs-toggle="tooltip" title="Edit">
                                                                <i class="fa fa-pencil-alt"></i>
                                                            </button>
                                                            <button type="button" class="btn btn-sm btn-alt-secondary" data-bs-toggle="tooltip" title="Delete">
                                                                <i class="fa fa-times"></i>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>`
                        })
                        document.getElementById("listCustomer").innerHTML = htmlCus;
                        console.log('customers', customers);
                    })
                    .catch(error => {
                        console.error('There was a problem with the fetch operation:', error);
                    });
            }
            // Gọi hàm để lấy danh sách
            getCustomerList();

            $("#btn-add-user").on("click", function (e) {
                e.preventDefault(); // Ngăn chặn form gửi đi (để xử lý validation trước)

                // Kiểm tra nếu form validation thành công
                if ($(".js-validation").valid()) {
                    // Lấy dữ liệu từ các trường input
                    var username = $("#val-username").val();
                    var email = $("#val-email").val();
                    var birthday = $("#val-birthday").val();
                    var password = $("#val-password").val();
                    var gender = $("input[name='user_gender']:checked").val();
                    var status = $("#user_status").is(":checked");

                    // Hiển thị dữ liệu trong console
                    console.log("Username: " + username);
                    console.log("Email: " + email);
                    console.log("Birthday: " + birthday);
                    console.log("Password: " + password);
                    console.log("Gender: " + gender);
                    console.log("Status: " + status);

                    // Tạo một đối tượng chứa dữ liệu cần gửi lên máy chủ
                    var userData = {
                        UserName: username,
                        Email: email,
                        BirthDay: birthday,
                        Password: password,
                        Gender: gender,
                        Status: status
                    };

                    $.ajax({
                        type: "POST",
                        url: "/Admin/Customers/AddCustomer",
                        data: userData, // Dữ liệu cần gửi lên máy chủ
                        success: function (response) {
                            // Xử lý phản hồi từ máy chủ, ví dụ: đóng modal và reset form
                            let customer = JSON.parse(response)
                            console.log(customer);

                            // Đóng modal (tuỳ vào mã HTML/CSS của modal)
                            $("#modal-customer").modal("hide");

                            // Reset form (tuỳ vào mã HTML của form)
                            $("#val-username").val("");
                            $("#val-email").val("");
                            $("#val-birthday").val("");
                            $("#val-password").val("");
                            $("input[name='user_gender']").prop("checked", false);
                            $("#user_status").prop("checked", false);
                        },
                        error: function (xhr, status, error) {
                            // Xử lý lỗi nếu có
                            console.log("Error: " + error);
                        }
                    });

                }
            });

        })
    </script>
}

