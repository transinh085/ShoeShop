@model IEnumerable<ShoeShop.Models.Blog> 

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var topics = ViewBag.Topics;
}
@section Styles {
    <link rel="stylesheet" href="~/admin/js/plugins/sweetalert2/sweetalert2.min.css">
    <link rel="stylesheet" href="~/admin/js/plugins/datatables-bs5/css/dataTables.bootstrap5.min.css">
}

<div class="content">
    <div class="block block-rounded">
        <div class="block-header block-header-default">
            <h3 class="block-title">List Posts</h3>
            <div class="block-options">
                <a class="btn btn-hero btn-primary" asp-action="Create">
                    <i class="fa-regular fa-plus"></i> Add
                </a>
            </div>
        </div>
        <div class="block-content">
            <div class="mb-1">
                <input type="text" class="form-control form-control-alt" id="blog-query" name="blog-query" placeholder="Search all blogs..">
            </div>
            <div class="row filters_listing_1">
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="dropdown">
                        <a href="#" data-bs-toggle="dropdown" class="drop">Topics</a>
                        <div class="dropdown-menu">
                            <div class="filter_type">
                                <ul>
                                    @if (topics != null)
                                    {
                                        foreach (var c in (dynamic)topics)
                                        {
                                            <li>
                                                <label class="container_check">
                                                    @c.Name
                                                    <input type="checkbox" name="topics" value="@c.Id"><span class="checkmark"></span>
                                                </label>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <!-- /dropdown -->

                </div>
            </div>
        </div>
        <div class="block-content pb-3 pt-0">
            <table class="table align-middle" id="blog-table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Author</th>
                        <th>Topic</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th class="text-center">Action</th>
                    </tr>
                </thead>
            </table>

        </div>
    </div>
</div>

@section Scripts {
    <script src="~/admin/js/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/admin/js/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/admin/js/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/admin/js/plugins/datatables-bs5/js/dataTables.bootstrap5.min.js"></script>
    <script>Dashmix.helpersOnLoad(['jq-select2']);</script>
    <script>
        let topics = [];
        $("[name='topics']").on("click", function (t) {
            let id = parseInt($(this).val());
            let index = topics.findIndex(c => c == id);
            if (index != -1) {
                topics.splice(index, 1);
            } else {
                topics.push(id);
            }
        })
        $(".filters_listing_1 .dropdown-menu .filter_type ul").on("click", function (t) { t.stopPropagation() })


        const getBadge = (value) => {
            let result = '';
            switch (value) {
                case false:
                    result = `<span class="badge rounded-pill bg-warning">Draft</span>`;
                    break;
                case true:
                    result = `<span class="badge rounded-pill bg-success">Public</span>`;
                    break;
                default:
                    result = `<span class="badge rounded-pill bg-secondary">Unknown</span>`;
            }
            return result;
        };

        $(document).ready(function () {
            jQuery.extend(jQuery.fn.dataTable.ext.classes, {
                sWrapper: "dataTables_wrapper dt-bootstrap5",
                sFilterInput: "form-control",
                sLengthSelect: "form-select"
            });
            jQuery.extend(!0, jQuery.fn.dataTable.defaults, {
                language: {
                    lengthMenu: "_MENU_",
                    search: "_INPUT_",
                    searchPlaceholder: "Search..",
                    info: "Page <strong>_PAGE_</strong> of <strong>_PAGES_</strong>",
                    paginate: {
                        first: '<i class="fa fa-angle-double-left"></i>',
                        previous: '<i class="fa fa-angle-left"></i>',
                        next: '<i class="fa fa-angle-right"></i>',
                        last: '<i class="fa fa-angle-double-right"></i>'
                    }
                }
            });

            var table = $("#blog-table").DataTable({
                pageLength: 10,
                lengthMenu: [
                    [5, 10, 20],
                    [5, 10, 20]
                ],
                "processing": true,
                "serverSide": true,
                "filter": false,
                "lengthChange": false,
                "ajax": {
                    "url": "/admin/blogs/getblogs",
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {
                        d.query = $('#blog-query').val();
                        d.topics = topics;
                    }
                },
                "columnDefs": [
                    { "targets": [3, 4], "sortable": false },
                ],
                "columns": [
                    { "data": "id", "name": "Id", "autoWidth": true, "className": "text-center" },
                    {
                        "data": "name", "name": "Name",
                        "render": function (data, type, row) {
                            return `<div class="d-flex gap-2 align-items-center">
                                 <img class="rounded" style="width: 40px; height: 40px" src="/img/blogs/${row.thumbnail.name}" />
                                 ${row.name}
                            </div>`;
                        },
                    },
                    { "data": "user.fullName", "name": "Author", "autoWidth": true },
                    { "data": "topic.name", "name": "Topic", "autoWidth": true },
                    {
                        "data": "createdAt", "name": "Date", "autoWidth": true, "render": function (data, type, row) {
                            return row.createdAt ? new Date(row.createdAt).toLocaleString() : '';
                        }
                    },
                    { "data": "isPublic", "name": "Status", "autoWidth": true, "render": (data) => getBadge(data) },
                    {
                        "render": function (data, type, row) {
                            return `<div class="btn-group">
                                                            <a href="/admin/blogs/edit/${row.id}" class="btn btn-sm btn-alt-secondary js-bs-tooltip-enabled" data-bs-toggle="tooltip" aria-label="Edit" data-bs-original-title="Edit">
                                                              <i class="fa fa-pencil-alt"></i>
                                                            </a>
                                                            <button type="button" data-id="${row.id}" class="btn btn-sm btn-alt-secondary js-bs-tooltip-enabled btn-delete" data-bs-toggle="tooltip" aria-label="Delete" data-bs-original-title="Delete">
                                                               <i class="fa fa-times"></i>
                                                            </button></div>`;
                        }, "className": "text-center"
                    }
                ],
                order: [
                    [0, 'desc']
                ],
                autoWidth: !1,
                responsive: !0
            });

            $('#blog-query').on('change', function () {
                table.draw();
            });

            $("[name='topics'],[name='author']").on('click', function () {
                table.draw();
            });
        });

        $(document).on("click", ".btn-delete", async function () {
            let trid = $(this).data("id");
            let result = await Swal.fire({
                title: "Are you sure?",
                text: "Would you like to delete this post?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, I'm sure",
                cancelButtonText: "Cannel"
            });

            if (result.value) {
                try {
                    let response = await $.post(`./Blogs/Delete/${trid}`);
                    Swal.fire("Deleted!", "Successfully deleted the post.", "success");
                    $(this).closest('tr').remove();
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire("Lỗi !", "Deletion of the post was not successful.", "error");
                }
            }
        });
    </script>
}


