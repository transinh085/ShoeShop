@model IEnumerable<ShoeShop.Models.Product>
@{
	ViewData["Title"] = "Products";
}
@section Styles {
	<link href="~/css/listing.css" rel="stylesheet">
}

@{
	var categories = ViewBag.Categories as List<Category>;
	var brands = ViewBag.Brands as List<Brand>;
	var sizes = ViewBag.Sizes as List<Size>;
	var products = ViewBag.Products as List<Product>;
	var colors = ViewBag.Colors as List<Color>;
}

<main>
	<div class="top_banner">
		<div class="opacity-mask d-flex align-items-center" data-opacity-mask="rgba(0, 0, 0, 0.3)">
			<div class="container">
				<div class="breadcrumbs">
					<ul>
						<li><a href="#">Home</a></li>
						<li><a href="#">Category</a></li>
						<li>Page active</li>
					</ul>
				</div>
				<h1>Shoes - Grid listing</h1>
			</div>
		</div>
		<img src="~/img/bg_cat_shoes.jpg" class="img-fluid" alt="">
	</div>
	<!-- /top_banner -->
	<div id="stick_here"></div>
	<div class="toolbox elemento_stick">
		<div class="container">
			<ul class="clearfix">
				<li>
					<div class="sort_select">
						<select name="sort" id="sort">
							<option value="popularity" selected="selected">Sort by popularity</option>
							<option value="rating">Sort by average rating</option>
							<option value="date">Sort by newness</option>
							<option value="price">Sort by price: low to high</option>
							<option value="price-desc">Sort by price: high to</option>
						</select>
					</div>
				</li>
				<li>
					<a href="#0"><i class="ti-view-grid"></i></a>
					<a href="listing-row-1-sidebar-left.html"><i class="ti-view-list"></i></a>
				</li>
				<li>
					<a href="#0" class="open_filters">
						<i class="ti-filter"></i><span>Filters</span>
					</a>
				</li>
			</ul>
		</div>
	</div>
	<!-- /toolbox -->

	<div class="container margin_30">

		<div class="row">
			<aside class="col-lg-3" id="sidebar_fixed">
				<div class="filter_col">
					<form method="get">
					<div class="inner_bt"><a href="#" class="open_filters"><i class="ti-close"></i></a></div>
					<div class="filter_type version_2">
						<h4><a href="#categories" data-bs-toggle="collapse" class="opened">Categories</a></h4>
						<div class="collapse show" id="categories">
							<ul>
								@if(categories != null)
								{
									foreach(var category in categories)
									{
										<li>
											<label class="container_check">
												@category.Name <small>24</small>
												<input type="checkbox" name="categories" value="@category.Id">
												<span class="checkmark"></span>
											</label>
										</li>
									}
								}
							</ul>
						</div>
						<!-- /filter_type -->
					</div>
					<!-- /filter_type -->
					<div class="filter_type version_2">
						<h4><a href="#colors" data-bs-toggle="collapse" class="opened">Color</a></h4>
						<div class="collapse show" id="colors">
							<ul>
								@if (colors != null)
								{
									foreach (var color in colors)
									{
										<li>
											<label class="container_check">
												@color.Name <small>06</small>
												<input type="checkbox" name="colors" value="@color.Id">
												<span class="checkmark"></span>
											</label>
										</li>
									}
								}
							</ul>

						</div>
					</div>
					<!-- /filter_type -->
					<div class="filter_type version_2">
						<h4><a href="#lbrands" data-bs-toggle="collapse" class="opened">Brands</a></h4>
						<div class="collapse show" id="lbrands">
							<ul>
								@if (brands != null)
								{
									foreach (var brand in brands)
									{
										<li>
											<label class="container_check">
												@brand.Name <small>02</small>
													<input type="checkbox" name="brands" value="@brand.Id">
												<span class="checkmark"></span>
											</label>
										</li>
									}
								}
							</ul>
						</div>
					</div>
						<!-- /filter_type -->
						<div class="filter_type version_2">
							<h4><a href="#sizes" data-bs-toggle="collapse" class="opened">Sizes</a></h4>
							<div class="collapse" id="sizes">
								<ul>
									@if (sizes != null)
									{
										foreach (var size in sizes)
										{
											<li>
												<label class="container_check">
													@size.Name <small>02</small>
													<input type="checkbox" name="sizes" value="@size.Id">
													<span class="checkmark"></span>
												</label>
											</li>
										}
									}
								</ul>
							</div>
						</div>
					<!-- /filter_type -->
					<div class="filter_type version_2">
						<h4><a href="#filter_4" data-bs-toggle="collapse" class="closed">Price</a></h4>
						<div class="collapse" id="filter_4">
							<ul>
								<li>
									<label class="container_check">
										$0 — $50<small>11</small>
										<input type="checkbox">
										<span class="checkmark"></span>
									</label>
								</li>
								<li>
									<label class="container_check">
										$50 — $100<small>08</small>
										<input type="checkbox">
										<span class="checkmark"></span>
									</label>
								</li>
								<li>
									<label class="container_check">
										$100 — $150<small>05</small>
										<input type="checkbox">
										<span class="checkmark"></span>
									</label>
								</li>
								<li>
									<label class="container_check">
										$150 — $200<small>18</small>
										<input type="checkbox">
										<span class="checkmark"></span>
									</label>
								</li>
							</ul>
						</div>
					</div>
					<!-- /filter_type -->
					<div class="buttons">
						<button type="submit" class="btn_1">Filter</button> <a href="#0" class="btn_1 gray">Reset</a>
					</div>
					</form>
				</div>
			</aside>
			<!-- /col -->
			<div class="col-lg-9">
				<div class="row small-gutters">
					@foreach (var item in ViewBag.Products)
					{
						@await Component.InvokeAsync("ShoeCards", item)
					}
				</div>
				<!-- /row -->
				<div class="pagination__wrapper">
					<ul class="pagination">
						<li><a href="#0" class="prev" title="previous page">&#10094;</a></li>
						<li>
							<a href="#0" class="active">1</a>
						</li>
						<li>
							<a href="#0">2</a>
						</li>
						<li>
							<a href="#0">3</a>
						</li>
						<li>
							<a href="#0">4</a>
						</li>
						<li><a href="#0" class="next" title="next page">&#10095;</a></li>
					</ul>
				</div>
			</div>
			<!-- /col -->
		</div>
		<!-- /row -->

	</div>
	<!-- /container -->
</main>

@section Scripts {
	<script src="~/js/sticky_sidebar.min.js"></script>
	<script src="~/js/specific_listing.js"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const categoriesCheckboxes = document.querySelectorAll("input[name=categories]");
			const colorsCheckboxes = document.querySelectorAll("input[name=colors]");
			const brandsCheckboxes = document.querySelectorAll("input[name=brands]");
			const sizesCheckboxes = document.querySelectorAll("input[name=sizes]");

			function updateURL() {
				const checkedCategories = getCheckedValues(categoriesCheckboxes);
				const checkedColors = getCheckedValues(colorsCheckboxes);
				const checkedBrands = getCheckedValues(brandsCheckboxes);
				const checkedSizes = getCheckedValues(sizesCheckboxes);

				const url = window.location.href.split('?')[0];
				const queryParams = [];

				if (checkedCategories.length > 0) {
					queryParams.push(`categories=${checkedCategories.join(",")}`);
				}
				if (checkedColors.length > 0) {
					queryParams.push(`colors=${checkedColors.join(",")}`);
				}
				if (checkedBrands.length > 0) {
					queryParams.push(`brands=${checkedBrands.join(",")}`);
				}
				if (checkedSizes.length > 0) {
					queryParams.push(`sizes=${checkedSizes.join(",")}`);
				}

				const finalURL = queryParams.length > 0 ? `${url}?${queryParams.join("&")}` : url;
				history.replaceState(null, null, finalURL);
			}

			function getCheckedValues(checkboxes) {
				return Array.from(checkboxes)
					.filter(checkbox => checkbox.checked)
					.map(checkbox => checkbox.value);
			}

			categoriesCheckboxes.forEach(checkbox => {
				checkbox.addEventListener("change", updateURL);
			});

			colorsCheckboxes.forEach(checkbox => {
				checkbox.addEventListener("change", updateURL);
			});

			brandsCheckboxes.forEach(checkbox => {
				checkbox.addEventListener("change", updateURL);
			});

			sizesCheckboxes.forEach(checkbox => {
				checkbox.addEventListener("change", updateURL);
			})
		});
	</script>
}



